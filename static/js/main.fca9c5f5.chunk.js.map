{"version":3,"sources":["Active-quizz/activeQuiz.module.css","Active-quizz/AnswersList/Answer/Answer.module.css","Layout/Layout.module.css","Navigations/MenuToggle.module.css","Navigations/Drawer.module.css","containers/Quiz/Quiz.module.css","FinishedQuiz/FinishedQuiz.module.css","UI/Button.module.css","UI/Backdrop.module.css","Active-quizz/AnswersList/AnswersList.module.css","picktures/597711cba19eb_0d739cac3d42d04c2e69c4cddf62f354.jpg","Navigations/MenuToggle.jsx","UI/Backdrop.jsx","Navigations/Drawer.jsx","Layout/Layout.jsx","Active-quizz/AnswersList/Answer/Answer.jsx","Active-quizz/AnswersList/AnswersList.jsx","Active-quizz/ActiveQuiz.jsx","UI/Button.jsx","FinishedQuiz/FinishedQuiz.jsx","containers/Quiz/Quiz.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","Drawer","map","link","index","key","this","close","Fragment","renderLinks","onClose","React","Component","Layout","state","menu","setState","menuCloseHandler","inner","main","children","Answer","AnswerItem","onAnswerClick","answers","id","text","AnswersList","ActiveQuiz","Question","answerNumber","quizLength","img","src","questionPickture","question","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Quiz","isFinished","activeQuestion","answerState","City","rightAnswerId","answerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","QuizWrapper","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fca9c5f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"activeQuiz_ActiveQuiz__1Vbsq\",\"Question\":\"activeQuiz_Question__1GhMJ\",\"img\":\"activeQuiz_img__1feyC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Answer\":\"Answer_Answer__2t7eE\",\"AnswerItem\":\"Answer_AnswerItem__2berr\",\"success\":\"Answer_success__3rIAH\",\"error\":\"Answer_error__3iQJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"Layout_inner__of66K\",\"main\":\"Layout_main__3_fpT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__26vpU\",\"open\":\"MenuToggle_open__1Ro_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3bRrr\",\"close\":\"Drawer_close__3yxhH\",\"active\":\"Drawer_active__15h42\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__1x_PZ\",\"QuizWrapper\":\"Quiz_QuizWrapper__17ueo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__txaA6\",\"success\":\"FinishedQuiz_success__2s3JZ\",\"error\":\"FinishedQuiz_error__p-NMc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3Cajf\",\"success\":\"Button_success__33vf4\",\"error\":\"Button_error__27hUD\",\"primary\":\"Button_primary__25PoZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1NXbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__JYRqr\"};","module.exports = __webpack_public_path__ + \"static/media/597711cba19eb_0d739cac3d42d04c2e69c4cddf62f354.3eb3214f.jpg\";","import React from \"react\";\r\nimport classes from \"./MenuToggle.module.css\"\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ]\r\n    {props.isOpen ? cls.push('fa-times' + ' ' + classes.open)  \r\n    :  cls.push('fa-bars')}\r\n  \r\n    return (\r\n        <i className={cls.join(' ')}\r\n        onClick={props.onToggle}\r\n        />\r\n            \r\n    )\r\n\r\n}\r\nexport default MenuToggle","import React from \"react\";\r\nimport classes from \"./Backdrop.module.css\"\r\n\r\nconst Backdrop = props => (\r\n    <div className={classes.Backdrop} onClick={props.onClick}></div>\r\n)\r\nexport default Backdrop","import React from \"react\";\r\nimport classes from \"./Drawer.module.css\"\r\nimport Backdrop from \"../UI/Backdrop\";\r\n\r\nconst links = [\r\n 1, 2, 3\r\n]\r\nclass Drawer extends React.Component {\r\n    renderLinks() {\r\n        return links.map((link, index)=>{\r\n            return (\r\n                <li key={index}>\r\n                  <a> Link {link}</a> \r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    render() {\r\n        const cls = [classes.Drawer]\r\n\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks()}\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Drawer","import React from \"react\";\r\nimport classes from \"./Layout.module.css\"\r\nimport MenuToggle from \"../Navigations/MenuToggle\";\r\nimport Drawer from \"../Navigations/Drawer\";\r\n\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    onToggle = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n    render () {\r\n        return (\r\n            <div className= {classes.inner}>\r\n                <Drawer isOpen={this.state.menu}\r\n                onClose={this.menuCloseHandler}/>\r\n               <MenuToggle onToggle={this.onToggle}\r\n               isOpen={this.state.menu}/>\r\n                <div className ={classes.main}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Layout;","import React from \"react\";\r\nimport classes from \"./Answer.module.css\"\r\n\r\nconst Answer = props => {\r\n    const cls = [classes.AnswerItem, classes.Answer]\r\n\r\n    if (props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n    \r\n    return (\r\n        <li className={cls.join(' ')} onClick={()=>props.onAnswerClick(props.answers.id)}>\r\n            {props.answers.text}\r\n        </li>\r\n    )\r\n}\r\n  \r\nexport default Answer;","import React from \"react\";\r\nimport classes from \"./AnswersList.module.css\"\r\nimport Answer from \"./Answer/Answer\";\r\n\r\nconst AnswersList = props => (\r\n    <ul className={classes.AnswersList}>\r\n        {props.answers.map((answers, index)=> {\r\n            return (\r\n                <Answer key={index} answers={answers} \r\n                state={props.state ? props.state[answers.id]: null}\r\n                onAnswerClick={props.onAnswerClick}/>\r\n            )\r\n        })}\r\n        <li></li>\r\n    </ul>\r\n)\r\nexport default AnswersList;","import React from \"react\";\r\nimport classes from \"./activeQuiz.module.css\"\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = props => (\r\n    <div className={classes.ActiveQuiz}>\r\n        <p className={classes.Question}>\r\n            <div>\r\n                <small>{props.answerNumber} из {props.quizLength}</small> <br/>\r\n                <img className={classes.img} src={props.questionPickture}></img>\r\n\r\n                <div> \r\n                    <strong>{props.answerNumber}</strong>&nbsp; \r\n                    {props.question}\r\n               </div>\r\n            </div>\r\n\r\n        </p>\r\n        <AnswersList answers={props.answers}\r\n            state={props.state}\r\n            onAnswerClick={props.onAnswerClick} />\r\n\r\n    </div>\r\n)\r\nexport default ActiveQuiz","import React from \"react\";\r\nimport classes from \"./Button.module.css\"\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n    debugger\r\n    return (\r\n        <button onClick={props.onClick}\r\n        className={cls.join(\" \")}\r\n        disabled={props.disabled}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\nimport classes from \"./FinishedQuiz.module.css\"\r\nimport Button from \"../UI/Button\";\r\n\r\nconst FinishedQuiz = props => {\r\n    \r\n    const successCount = Object.keys(props.results).reduce((total, key)=>{\r\n        if( props.results[key] === 'success') {\r\n            total ++\r\n        } return total\r\n    }, 0)\r\n    \r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                {props.quiz.map((quizItem, index) => {\r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                        classes[props.results[quizItem.id]]\r\n                    ]\r\n                    return (\r\n                        <li key={index}>\r\n                            <strong>{index + 1}</strong> &nbsp;\r\n                            {quizItem.question}\r\n                            <i className={cls.join(' ')}/>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <p>Правильно {successCount} из {props.quiz.length}</p>\r\n             <Button onClick={props.onRetry} type={\"primary\"}>Повторить</Button>\r\n             <Button onClick={props.onRetry} type={\"success\"}>Перейти в список тестов</Button>\r\n        </div>\r\n    )\r\n}\r\nexport default FinishedQuiz","import React from \"react\";\r\nimport classes from \"./Quiz.module.css\"\r\nimport ActiveQuiz from \"../../Active-quizz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../FinishedQuiz/FinishedQuiz\";\r\nimport City from \"../../picktures/597711cba19eb_0d739cac3d42d04c2e69c4cddf62f354.jpg\"\r\n\r\nclass Quiz extends React.Component {\r\n    state = {\r\n        results: {},\r\n        isFinished: false,\r\n        activeQuestion: 0,\r\n        answerState: null,\r\n        quiz: [\r\n            {\r\n                questionPickture: City,\r\n                question: 'Сколько лет Екатеринбургу?',\r\n                rightAnswerId: 4,\r\n                id: 1,\r\n                answers: [\r\n                    { text: '150', id: 1 },\r\n                    { text: '300', id: 2 },\r\n                    { text: '100', id: 3 },\r\n                    { text: '296', id: 4 }\r\n                ]\r\n            },\r\n            {\r\n                question: 'В честь какой императрицы назван город?',\r\n                rightAnswerId: 1,\r\n                id: 2,\r\n                answers: [\r\n                    { text: 'В честь Екатерины I', id: 1 },\r\n                    { text: 'В честь Екатерины II', id: 2 },\r\n                    { text: 'В честь Екатерины III', id: 3 },\r\n                ]\r\n            },\r\n            {\r\n                question: 'На какой реке стоит Екатеринбург?',\r\n                rightAnswerId: 2,\r\n                id: 3,\r\n                answers: [\r\n                    { text: 'Чусовая', id: 1 },\r\n                    { text: 'Исеть', id: 2 },\r\n                    { text: 'Волга', id: 3 },\r\n                    { text: 'Иртыш', id: 4 }\r\n                ]\r\n            },\r\n            {\r\n                question: 'Какие животные держат щит на гербе?',\r\n                rightAnswerId: 3,\r\n                id: 4,\r\n                answers: [\r\n                    { text: 'Медведь и лиса', id: 1 },\r\n                    { text: 'Заяц и волк', id: 2 },\r\n                    { text: 'Медведь и соболь', id: 3 }\r\n                ]\r\n            },\r\n            {\r\n                question: 'Кто из знаменитых писателей родился в Екатеринбурге?',\r\n                rightAnswerId: 1,\r\n                id: 5,\r\n                answers: [\r\n                    { text: 'Решетников', id: 1 },\r\n                    { text: 'Бажов', id: 2 },\r\n                    { text: 'Мамин-Сибиряк', id: 3 },\r\n                    { text: 'Пушкин', id: 4 }\r\n                ]\r\n            },\r\n            {\r\n                question: 'Сколько этажей в башне «Исеть»?',\r\n                rightAnswerId: 3,\r\n                id: 6,\r\n                answers: [\r\n                    { text: '40', id: 1 },\r\n                    { text: '48', id: 2 },\r\n                    { text: '52', id: 3 },\r\n                    { text: '55', id: 4 }\r\n                ]\r\n            },\r\n            {\r\n                question: 'Сколько художественных фильмов снято на Свердловской киностудии?',\r\n                rightAnswerId: 2,\r\n                id: 7,\r\n                answers: [\r\n                    { text: 'Более 200', id: 1 },\r\n                    { text: 'Около 300', id: 2 },\r\n                    { text: 'Менее 150', id: 3 },\r\n                ]\r\n            },\r\n            {\r\n                question: 'Год основания Екатеринбурга?',\r\n                rightAnswerId: 1,\r\n                id: 8,\r\n                answers: [\r\n                    { text: '1723 год', id: 1 },\r\n                    { text: '1730 год', id: 2 },\r\n                    { text: '1811 год', id: 3 },\r\n                    { text: '1921 год ', id: 4 }\r\n                ]\r\n            },\r\n            {\r\n                question: 'Сколько станций метро в городе?',\r\n                rightAnswerId: 1,\r\n                id: 9,\r\n                answers: [\r\n                    { text: '9', id: 1 },\r\n                    { text: '11', id: 2 },\r\n                    { text: '7', id: 3 },\r\n                ]\r\n            },\r\n            {\r\n                question: 'Какая улица самая длинная в Екб?',\r\n                rightAnswerId: 1,\r\n                id: 10,\r\n                answers: [\r\n                    { text: 'Шефская', id: 1 },\r\n                    { text: 'Ленина', id: 2 },\r\n                    { text: 'Белинского', id: 3 },\r\n                    { text: 'Коммунистическая', id: 4 }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n    onAnswerClick = (answerId) => {\r\n        if (this.state.answerState) {\r\n            const key = Object.keys(this.state.answerState)[0]\r\n            if (this.state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n        const question = this.state.quiz[this.state.activeQuestion]\r\n        const results = this.state.results\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            if (!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n            this.setState({\r\n                answerState: { [answerId]: 'success' },\r\n                results\r\n            })\r\n\r\n            const timeout = window.setTimeout(() => {\r\n                if (this.isQuizFinished()) {\r\n                    this.setState({\r\n                        isFinished: true\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        activeQuestion: this.state.activeQuestion + 1,\r\n                        answerState: null\r\n                    })\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 1000)\r\n\r\n        } else {\r\n            results[question.id] = 'error'\r\n            this.setState({\r\n                answerState: { [answerId]: 'error' },\r\n                results\r\n            })\r\n        }\r\n\r\n    }\r\n    isQuizFinished() {\r\n        return this.state.activeQuestion + 1 === this.state.quiz.length\r\n    }\r\n    retryHandler = () => {\r\n        this.setState({\r\n            activeQuestion: 0,\r\n            answerState: null,\r\n            isFinished: false,\r\n            results: {}\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>                \r\n                    {\r\n                        this.state.isFinished ?\r\n                            <FinishedQuiz results={this.state.results} quiz={this.state.quiz} \r\n                            onRetry={this.retryHandler}/>  :\r\n                            <ActiveQuiz answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                                question={this.state.quiz[this.state.activeQuestion].question}\r\n                                onAnswerClick={this.onAnswerClick}\r\n                                questionPickture={this.state.quiz[this.state.activeQuestion].questionPickture}\r\n                                quizLength={this.state.quiz.length}\r\n                                answerNumber={this.state.activeQuestion + 1}\r\n                                state={this.state.answerState}\r\n                            />       \r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Quiz;","import React from 'react';\nimport Layout from './Layout/Layout';\nimport Quiz from \"./containers/Quiz/Quiz.jsx\"\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <Quiz/>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}